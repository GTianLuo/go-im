syntax = "proto3";

option go_package = "./;message";

package message;
// cd common/;  protoc --go_out=message/ message/*.proto

enum CmdType { //枚举信令类型
  PrivateMsgCmd = 0;
  GroupMsgCmd = 1;
  HeartBeatCmd = 2;
  AuthRequestCmd = 3;

  MsgAckCmd = 4;
  HeartBeatAckCmd = 5;
  AuthResponseCmd = 6;

  SystemCmd = 7;
}

enum MsgType{ //枚举消息类型
  TextMsg = 0;
  PictureMsg = 1;
}


// 顶层cmd pb结构
message Cmd{
  CmdType Type = 1;
  int64  MsgId = 2; //该字段在上下游有不同的含义，作上游消息的时候MsgId是会话内的唯一Id，作下游消息的时候是全局唯一id
  string  From = 3;
  int64 timestamp= 4;
  bytes Payload = 5;
}

//单聊
message PrivateMsg{
  MsgType Type = 1;
  string To = 3;
  bytes Data = 4;
}

//群聊
message GroupMsg{
  MsgType Type = 1;
  string To = 2;
  bytes Data = 3;
}

//鉴权请求
message AuthRequest {
  string  Token = 1;
}

//鉴权响应
message AuthResponse{
  int32 Status = 1; //1表示内部错误，0表示鉴权失败，1表示成功,2表示该网关连接达到上限，需重新连接
  string ErrMsg = 2;
}